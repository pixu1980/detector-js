{"mappings":"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","sources":["<anon>","packages/core/lib/core.ts","packages/core/lib/polyfills/index.js","packages/core/lib/polyfills/core/index.js","packages/core/lib/polyfills/string/index.js","packages/core/lib/polyfills/string/includes.js","packages/core/lib/polyfills/string/startsWith.js","packages/core/lib/polyfills/string/toCamelCase.js","packages/core/lib/polyfills/array/index.js","packages/core/lib/polyfills/array/map.js","packages/core/lib/polyfills/array/includes.js","packages/core/lib/polyfills/object/index.js","packages/core/lib/polyfills/object/assign.js","packages/core/lib/polyfills/object/getOwnPropertySymbols.js","packages/core/lib/polyfills/object/getOwnPropertyDescriptors.js","packages/core/lib/polyfills/object/merge.js","packages/core/lib/asserts.ts","packages/core/lib/flagsClass.ts","packages/core/lib/cssFlagsClass.ts"],"sourcesContent":["function $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nwindow.Reflect = window.Reflect || {};\n\n\n/* eslint-disable prefer-destructuring */ /* eslint-disable prefer-rest-params */ /* eslint-disable no-restricted-globals */ /* eslint-disable no-bitwise */ if (!String.prototype.includes) Object.defineProperty(String.prototype, \"includes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value (search, start) {\n        start = typeof start !== \"number\" ? 0 : start;\n        if (start + search.length > this.length) return false;\n        return this.indexOf(search, start) !== -1;\n    }\n});\n\n\n/* eslint-disable prefer-destructuring */ /* eslint-disable prefer-rest-params */ /* eslint-disable no-restricted-globals */ /* eslint-disable no-bitwise */ if (!String.prototype.startsWith) Object.defineProperty(String.prototype, \"startsWith\", {\n    value (search, rawPos) {\n        const pos = rawPos > 0 ? rawPos | 0 : 0;\n        return this.substring(pos, pos + search.length) === search;\n    }\n});\n\n\n/* eslint-disable prefer-destructuring */ /* eslint-disable prefer-rest-params */ /* eslint-disable no-restricted-globals */ /* eslint-disable no-bitwise */ if (!String.prototype.toCamelCase) Object.defineProperty(String.prototype, \"toCamelCase\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value () {\n        const s = this && this.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g).map((x)=>{\n            return x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase();\n        }).join(\"\");\n        return s.slice(0, 1).toLowerCase() + s.slice(1);\n    }\n});\n\n\n\n\n/* eslint-disable prefer-destructuring */ /* eslint-disable prefer-rest-params */ /* eslint-disable no-restricted-globals */ /* eslint-disable no-bitwise */ if (!Array.prototype.map) Object.defineProperty(Array.prototype, \"map\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value (arr, iterator) {\n        const result = [];\n        for(let i = 0; i < arr.length; i += 1)result.push(iterator(arr[i]));\n        return result;\n    }\n});\n\n\n/* eslint-disable prefer-destructuring */ /* eslint-disable prefer-rest-params */ /* eslint-disable no-restricted-globals */ /* eslint-disable no-bitwise */ if (!Array.prototype.includes) Object.defineProperty(Array.prototype, \"includes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value (valueToFind, fromIndex) {\n        if (this == null) throw new TypeError('\"this\" is null or not defined');\n        // 1. Let O be ? ToObject(this value).\n        const o = Object(this);\n        // 2. Let len be ? ToLength(? Get(O, \"length\")).\n        const len = o.length >>> 0;\n        // 3. If len is 0, return false.\n        if (len === 0) return false;\n        // 4. Let n be ? ToInteger(fromIndex).\n        //    (If fromIndex is undefined, this step produces the value 0.)\n        const n = fromIndex | 0;\n        // 5. If n ≥ 0, then\n        //  a. Let k be n.\n        // 6. Else n < 0,\n        //  a. Let k be len + n.\n        //  b. If k < 0, let k be 0.\n        let k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n        function sameValueZero(x, y) {\n            return x === y || typeof x === \"number\" && typeof y === \"number\" && isNaN(x) && isNaN(y);\n        }\n        // 7. Repeat, while k < len\n        while(k < len){\n            // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n            // b. If SameValueZero(valueToFind, elementK) is true, return true.\n            if (sameValueZero(o[k], valueToFind)) return true;\n            // c. Increase k by 1.\n            k++;\n        }\n        // 8. Return false\n        return false;\n    }\n});\n\n\n\n\n/* eslint-disable prefer-destructuring */ /* eslint-disable prefer-rest-params */ /* eslint-disable no-restricted-globals */ /* eslint-disable no-bitwise */ if (!Object.assign) Object.defineProperty(Object, \"assign\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value (target, firstSource) {\n        if (target === undefined || target === null) throw new TypeError(\"Cannot convert first argument to object\");\n        const to = Object(target);\n        for(let i = 1; i < arguments.length; i++){\n            let nextSource = arguments[i];\n            if (nextSource === undefined || nextSource === null) continue;\n            nextSource = Object(nextSource);\n            const keysArray = Object.keys(Object(nextSource));\n            for(let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++){\n                const nextKey = keysArray[nextIndex];\n                const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                if (desc !== undefined && desc.enumerable) to[nextKey] = nextSource[nextKey];\n            }\n        }\n        return to;\n    }\n});\n\n\n/* eslint-disable */ (function(Object1, GOPS) {\n    \"use strict\";\n    // (C) Andrea Giammarchi - Mit Style\n    // @see https://github.com/es-shims/get-own-property-symbols\n    if (GOPS in Object1) return;\n    var setDescriptor, G = typeof $parcel$global === typeof G ? window : $parcel$global, id = 0, random = String(Math.random()), prefix = \"__\\x01symbol:\", prefixLength = prefix.length, internalSymbol = \"__\\x01symbol@@\" + random, DP = \"defineProperty\", DPies = \"defineProperties\", GOPN = \"getOwnPropertyNames\", GOPD = \"getOwnPropertyDescriptor\", PIE = \"propertyIsEnumerable\", gOPN = Object1[GOPN], gOPD = Object1[GOPD], create = Object1.create, keys = Object1.keys, freeze = Object1.freeze || Object1, defineProperty = Object1[DP], $defineProperties = Object1[DPies], descriptor = gOPD(Object1, GOPN), ObjectProto = Object1.prototype, hOP = ObjectProto.hasOwnProperty, pIE = ObjectProto[PIE], toString = ObjectProto.toString, addInternalIfNeeded = function(o, uid, enumerable) {\n        if (!hOP.call(o, internalSymbol)) defineProperty(o, internalSymbol, {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: {}\n        });\n        o[internalSymbol][\"@@\" + uid] = enumerable; // eslint-disable-line no-param-reassign\n    }, createWithSymbols = function(proto, descriptors) {\n        var self = create(proto);\n        gOPN(descriptors).forEach(function(key) {\n            if (propertyIsEnumerable.call(descriptors, key)) $defineProperty(self, key, descriptors[key]);\n        });\n        return self;\n    }, copyAsNonEnumerable = function(descriptor) {\n        var newDescriptor = create(descriptor);\n        newDescriptor.enumerable = false;\n        return newDescriptor;\n    }, get = function get() {}, onlyNonSymbols = function(name) {\n        // eslint-disable-next-line eqeqeq\n        return name != internalSymbol && !hOP.call(source, name);\n    }, onlySymbols = function(name) {\n        // eslint-disable-next-line eqeqeq\n        return name != internalSymbol && hOP.call(source, name);\n    }, propertyIsEnumerable = function propertyIsEnumerable(key) {\n        var uid = String(key);\n        return onlySymbols(uid) ? hOP.call(this, uid) && this[internalSymbol][\"@@\" + uid] : pIE.call(this, key);\n    }, setAndGetSymbol = function(uid) {\n        var descriptor = {\n            enumerable: false,\n            configurable: true,\n            get: get,\n            set: function(value) {\n                setDescriptor(this, uid, {\n                    enumerable: false,\n                    configurable: true,\n                    writable: true,\n                    value: value\n                });\n                addInternalIfNeeded(this, uid, true);\n            }\n        };\n        defineProperty(ObjectProto, uid, descriptor);\n        source[uid] = defineProperty(Object1(uid), \"constructor\", sourceConstructor);\n        return freeze(source[uid]);\n    }, Symbol1 = function Symbol1(description) {\n        if (this instanceof Symbol1) throw new TypeError(\"Symbol is not a constructor\");\n        return setAndGetSymbol(prefix.concat(description || \"\", random, ++id));\n    }, source = create(null), sourceConstructor = {\n        value: Symbol1\n    }, sourceMap = function(uid) {\n        return source[uid];\n    }, $defineProperty = function defineProp(o, key, descriptor) {\n        var uid = String(key);\n        if (onlySymbols(uid)) {\n            setDescriptor(o, uid, descriptor.enumerable ? copyAsNonEnumerable(descriptor) : descriptor);\n            addInternalIfNeeded(o, uid, !!descriptor.enumerable);\n        } else defineProperty(o, key, descriptor);\n        return o;\n    }, $getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n        return gOPN(o).filter(onlySymbols).map(sourceMap);\n    };\n    descriptor.value = $defineProperty;\n    defineProperty(Object1, DP, descriptor);\n    descriptor.value = $getOwnPropertySymbols;\n    defineProperty(Object1, GOPS, descriptor);\n    descriptor.value = function getOwnPropertyNames(o) {\n        return gOPN(o).filter(onlyNonSymbols);\n    };\n    defineProperty(Object1, GOPN, descriptor);\n    descriptor.value = function defineProperties(o, descriptors) {\n        var symbols = $getOwnPropertySymbols(descriptors);\n        if (symbols.length) keys(descriptors).concat(symbols).forEach(function(uid) {\n            if (propertyIsEnumerable.call(descriptors, uid)) $defineProperty(o, uid, descriptors[uid]);\n        });\n        else $defineProperties(o, descriptors);\n        return o;\n    };\n    defineProperty(Object1, DPies, descriptor);\n    descriptor.value = propertyIsEnumerable;\n    defineProperty(ObjectProto, PIE, descriptor);\n    descriptor.value = Symbol1;\n    defineProperty(G, \"Symbol\", descriptor);\n    // defining `Symbol.for(key)`\n    descriptor.value = function(key) {\n        var uid = prefix.concat(prefix, key, random);\n        return uid in ObjectProto ? source[uid] : setAndGetSymbol(uid);\n    };\n    defineProperty(Symbol1, \"for\", descriptor);\n    // defining `Symbol.keyFor(symbol)`\n    descriptor.value = function(symbol) {\n        if (onlyNonSymbols(symbol)) throw new TypeError(symbol + \" is not a symbol\");\n        if (!hOP.call(source, symbol)) return void 0;\n        var label = symbol.slice(prefixLength);\n        if (label.slice(0, prefixLength) !== prefix) return void 0;\n        label = label.slice(prefixLength);\n        if (label === random) return void 0;\n        label = label.slice(0, label.length - random.length);\n        return label.length > 0 ? label : void 0;\n    };\n    defineProperty(Symbol1, \"keyFor\", descriptor);\n    descriptor.value = function getOwnPropertyDescriptor(o, key) {\n        var descriptor = gOPD(o, key);\n        if (descriptor && onlySymbols(key)) descriptor.enumerable = propertyIsEnumerable.call(o, key);\n        return descriptor;\n    };\n    defineProperty(Object1, GOPD, descriptor);\n    descriptor.value = function(proto, descriptors) {\n        return arguments.length === 1 || typeof descriptors === \"undefined\" ? create(proto) : createWithSymbols(proto, descriptors);\n    };\n    defineProperty(Object1, \"create\", descriptor);\n    descriptor.value = function() {\n        var str = toString.call(this);\n        return str === \"[object String]\" && onlySymbols(this) ? \"[object Symbol]\" : str;\n    };\n    defineProperty(ObjectProto, \"toString\", descriptor);\n    try {\n        if (create(defineProperty({}, prefix, {\n            get: function() {\n                return defineProperty(this, prefix, {\n                    value: true\n                })[prefix];\n            }\n        }))[prefix] === true) setDescriptor = defineProperty;\n        else throw \"IE11\"; // eslint-disable-line no-throw-literal\n    } catch (o_O) {\n        setDescriptor = function(o, key, descriptor) {\n            var protoDescriptor = gOPD(ObjectProto, key);\n            delete ObjectProto[key];\n            defineProperty(o, key, descriptor);\n            defineProperty(ObjectProto, key, protoDescriptor);\n        };\n    }\n})(Object, \"getOwnPropertySymbols\");\n(function(O, Symbol1) {\n    \"use strict\";\n    var dP = O.defineProperty, ObjectProto = O.prototype, toString = ObjectProto.toString, toStringTag = \"toStringTag\", descriptor;\n    [\n        \"iterator\",\n        \"match\",\n        \"replace\",\n        \"search\",\n        \"split\",\n        \"hasInstance\",\n        \"isConcatSpreadable\",\n        \"unscopables\",\n        \"species\",\n        \"toPrimitive\",\n        toStringTag // A string value used for the default description of an object. Used by Object.prototype.toString().\n    ].forEach(function(name) {\n        if (!(name in Symbol1)) {\n            dP(Symbol1, name, {\n                value: Symbol1(name)\n            });\n            if (name === toStringTag) {\n                descriptor = O.getOwnPropertyDescriptor(ObjectProto, \"toString\");\n                descriptor.value = function() {\n                    var str = toString.call(this);\n                    var tst = this == null ? this : this[Symbol1.toStringTag];\n                    return tst == null ? str : \"[object \" + tst + \"]\";\n                };\n                dP(ObjectProto, \"toString\", descriptor);\n            }\n        }\n    });\n})(Object, Symbol);\n(function(Si, AP, SP) {\n    function returnThis() {\n        return this;\n    }\n    /*\n   * make Arrays usable as iterators\n   * so that other iterables can copy same logic\n   */ if (!AP[Si]) // eslint-disable-next-line no-param-reassign\n    AP[Si] = function() {\n        var i = 0, self = this, iterator = {\n            next: function next() {\n                var done = self.length <= i;\n                return done ? {\n                    done: done\n                } : {\n                    done: done,\n                    value: self[i++]\n                };\n            }\n        };\n        iterator[Si] = returnThis;\n        return iterator;\n    };\n    /*\n   * make Strings usable as iterators\n   * to simplify Array.from and for/of like loops\n   */ if (!SP[Si]) // eslint-disable-next-line no-param-reassign\n    SP[Si] = function() {\n        var fromCodePoint = String.fromCodePoint, self = this, i = 0, length = self.length, iterator = {\n            next: function next() {\n                var done = length <= i, c = done ? \"\" : fromCodePoint(self.codePointAt(i));\n                i += c.length;\n                return done ? {\n                    done: done\n                } : {\n                    done: done,\n                    value: c\n                };\n            }\n        };\n        iterator[Si] = returnThis;\n        return iterator;\n    };\n})(Symbol.iterator, Array.prototype, String.prototype);\n\n\n/* eslint-disable prefer-destructuring */ /* eslint-disable prefer-rest-params */ /* eslint-disable no-restricted-globals */ /* eslint-disable no-bitwise */ if (!Object.hasOwnProperty(\"getOwnPropertyDescriptors\")) Object.defineProperty(Object, \"getOwnPropertyDescriptors\", {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    value (object) {\n        const keys = !!Reflect && !!Reflect.ownKeys ? Reflect.ownKeys(object) : Object.getOwnPropertyNames(object).concat(Object.getOwnPropertySymbols(object));\n        return keys.reduce((descriptors, key)=>{\n            return Object.defineProperty(descriptors, key, {\n                configurable: true,\n                enumerable: true,\n                writable: true,\n                value: Object.getOwnPropertyDescriptor(object, key)\n            });\n        }, {});\n    }\n});\n\n\n/* eslint-disable prefer-destructuring */ /* eslint-disable prefer-rest-params */ /* eslint-disable no-restricted-globals */ /* eslint-disable no-bitwise */ if (!Object.prototype.merge) Object.defineProperty(Object.prototype, \"merge\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value (...objs) {\n        const mergeObj = [\n            this,\n            ...objs\n        ].reduce((acc, obj)=>Object.keys(obj).reduce((a, k)=>{\n                if (acc.hasOwnProperty(k)) {\n                    if (acc[k] instanceof Array) acc[k] = [].concat(acc[k], obj[k]);\n                    else if (acc[k] instanceof Object && Object.keys(acc[k]).length > 0 && obj[k] instanceof Object && Object.keys(obj[k]).length > 0) acc[k].merge(obj[k]);\n                    else acc[k] = obj[k];\n                } else acc[k] = obj[k];\n                return acc;\n            }, {}), {});\n        return Object.assign(this, mergeObj);\n    }\n});\n\n\n\n\n\n\nvar $2e0bb4eabf415dc3$exports = {};\n\n$parcel$export($2e0bb4eabf415dc3$exports, \"Asserts\", () => $2e0bb4eabf415dc3$export$a01bb7117a391d00);\n/**\n *\n *\n * @export\n * @class Asserts\n */ class $2e0bb4eabf415dc3$export$a01bb7117a391d00 {\n    static checkAssert(assert, safe = false) {\n        if (!!assert) {\n            if (assert instanceof Function) {\n                if (!!safe) try {\n                    return assert();\n                } catch (e) {\n                    return false;\n                }\n                return assert();\n            }\n            return assert;\n        }\n        return false;\n    }\n    /**\n   * Check for every assert to be true\n   *\n   * @static\n   * @param {any} [asserts=[]] - array of asserts (can be boolean, strings, functions, whatever you want ;-)\n   * @param {boolean} [safe=false] - executes asserts in a safe mode (try/catch)\n   * @returns boolean\n   *\n   * @memberOf Asserts\n   */ static all(asserts = [], safe = false) {\n        return asserts.every((assert)=>{\n            return $2e0bb4eabf415dc3$export$a01bb7117a391d00.checkAssert(assert, safe);\n        });\n    }\n    /**\n   * Check for at least one assert to be true\n   *\n   * @static\n   * @param {any} [asserts=[]] - array of asserts (can be boolean, strings, functions, whatever you want ;-)\n   * @param {boolean} [safe=false] - executes asserts in a safe mode (try/catch)\n   * @returns boolean\n   *\n   * @memberOf Asserts\n   */ static one(asserts = [], safe = false) {\n        return asserts.some((assert)=>{\n            return $2e0bb4eabf415dc3$export$a01bb7117a391d00.checkAssert(assert, safe);\n        });\n    }\n}\n\n\nvar $71fc7a70ac28ce65$exports = {};\n\n$parcel$export($71fc7a70ac28ce65$exports, \"FlagsClass\", () => $71fc7a70ac28ce65$export$4f3d6547cdbed990);\n/**\n *\n *\n * @export\n * @class FlagsClass\n */ class $71fc7a70ac28ce65$export$4f3d6547cdbed990 {\n    #booleanFlagsValuePropertyName;\n    get booleanFlagsValuePropertyName() {\n        return this.#booleanFlagsValuePropertyName;\n    }\n    set booleanFlagsValuePropertyName(booleanFlagsValuePropertyName) {\n        this.#booleanFlagsValuePropertyName = booleanFlagsValuePropertyName;\n    }\n    #root;\n    get root() {\n        return this.#root;\n    }\n    #process;\n    get process() {\n        return this.#process;\n    }\n    #navigator;\n    get navigator() {\n        return this.#navigator;\n    }\n    #document;\n    get document() {\n        return this.#document;\n    }\n    #ua;\n    get ua() {\n        return this.#ua;\n    }\n    /**\n   * Creates an instance of FlagsClass.\n   * @param {any} [ua=null]\n   *\n   * @memberOf FlagsClass\n   */ constructor(ua = null){\n        this.#booleanFlagsValuePropertyName = \"name\";\n        this.#root = self || window || $parcel$global || {};\n        this.#process = this.#root.process || {};\n        this.#navigator = this.#root.navigator || {};\n        this.#document = this.#root.document || null;\n        this.#ua = ua || this.#navigator.userAgent || \"n/a\";\n    }\n    /**\n   *\n   *\n   * @returns {object}\n   *\n   * @memberOf FlagsClass\n   */ toValues() {\n        const proto = Object.getPrototypeOf(this);\n        const protoName = (this.#booleanFlagsValuePropertyName || this.constructor.name).toLowerCase();\n        const protoProperties = Object.getOwnPropertyNames(proto).filter((prop)=>{\n            return !!Object.getOwnPropertyDescriptors(proto)[prop].get;\n        }).concat(Object.getOwnPropertyNames(this).filter((prop)=>{\n            return !prop.startsWith(\"_\") && !Object.getOwnPropertyDescriptor(this, prop)?.get;\n        }));\n        const protoPropertiesReduced = protoProperties.reduce((acc, prop)=>{\n            if (!!this[prop]) {\n                if (typeof this[prop] === \"boolean\") acc[protoName] = prop;\n                else acc[prop] = this[prop];\n            }\n            return acc;\n        }, {});\n        return protoPropertiesReduced;\n    }\n    /**\n   *\n   *\n   * @returns {object}\n   *\n   * @memberOf FlagsClass\n   */ toFlags() {\n        const proto = Object.getPrototypeOf(this);\n        return Object.getOwnPropertyNames(proto).filter((prop)=>{\n            return !!Object.getOwnPropertyDescriptors(proto)[prop].get;\n        }).reduce((acc, prop)=>{\n            acc[prop] = this[prop];\n            return acc;\n        }, {})//@ts-ignore\n        .merge(Object.getOwnPropertyNames(this).filter((prop)=>{\n            return !prop.startsWith(\"_\") && !Object.getOwnPropertyDescriptor(this, prop)?.get;\n        }).reduce((acc, prop)=>{\n            acc[prop] = this[prop];\n            return acc;\n        }, {}));\n    }\n}\n\n\nvar $da8b88b012a74d9f$exports = {};\n\n$parcel$export($da8b88b012a74d9f$exports, \"CssFlagsClass\", () => $da8b88b012a74d9f$export$f4dfb95cdf26c5c7);\n\nclass $da8b88b012a74d9f$export$f4dfb95cdf26c5c7 extends (0, $71fc7a70ac28ce65$export$4f3d6547cdbed990) {\n    #flags;\n    get flags() {\n        return this.#flags;\n    }\n    #cssFlagsPrefix;\n    get cssFlagsPrefix() {\n        return this.#cssFlagsPrefix;\n    }\n    /**\n   * Creates an instance of CssFlagsClass.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='flags']\n   *\n   * @memberOf CssFlagsClass\n   */ constructor(ua = null, flags = {}, cssFlagsPrefix = \"flags\"){\n        super(ua);\n        this.#flags = flags;\n        this.#flags[1] = true;\n        this.#cssFlagsPrefix = cssFlagsPrefix;\n    }\n    /**\n   *\n   *\n   * @returns object\n   *\n   * @memberOf CssFlagsClass\n   */ toCssFlags() {\n        const proto = Object.getPrototypeOf(this);\n        return Object.getOwnPropertyNames(proto).filter((prop)=>{\n            return !!Object.getOwnPropertyDescriptors(proto)[prop].get;\n        }).reduce((acc, prop)=>{\n            if (!!this[prop]) acc.push(`${this.#cssFlagsPrefix}--${prop}--${typeof this[prop] !== \"boolean\" ? \"--\" + this[prop] : \"\"}`.toLowerCase());\n            return acc;\n        }, []);\n    }\n}\n\n\n\"use strict\";\n$parcel$exportWildcard(module.exports, $2e0bb4eabf415dc3$exports);\n$parcel$exportWildcard(module.exports, $71fc7a70ac28ce65$exports);\n$parcel$exportWildcard(module.exports, $da8b88b012a74d9f$exports);\n\n\n//# sourceMappingURL=core.js.map\n","'use strict';\n\nimport './polyfills';\n\nexport * from './asserts';\nexport * from './flagsClass';\nexport * from './cssFlagsClass';\n\nif (process.env.NODE_ENV === 'development') {\n  const packageJSON = require('../package.json');\n\n  console.log(`${packageJSON.description} v${packageJSON.version} initialized`);\n}\n","import './core/index';\nimport './string/index';\nimport './array/index';\nimport './object/index';\n","window.Reflect = window.Reflect || {};\n","import './includes';\nimport './startsWith';\nimport './toCamelCase';\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable no-bitwise */\n\nif (!String.prototype.includes) {\n  Object.defineProperty(String.prototype, 'includes', {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value(search, start) {\n      start = (typeof start !== 'number') ? 0 : start;\n\n      if (start + search.length > this.length) {\n        return false;\n      }\n\n      return this.indexOf(search, start) !== -1;\n    },\n  });\n}\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable no-bitwise */\n\nif (!String.prototype.startsWith) {\n  Object.defineProperty(String.prototype, 'startsWith', {\n    value(search, rawPos) {\n      const pos = rawPos > 0 ? rawPos | 0 : 0;\n      return this.substring(pos, pos + search.length) === search;\n    },\n  });\n}\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable no-bitwise */\n\nif (!String.prototype.toCamelCase) {\n  Object.defineProperty(String.prototype, 'toCamelCase', {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value() {\n      const s = this && this.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g).map((x) => {\n        return x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase();\n      }).join('');\n\n      return s.slice(0, 1).toLowerCase() + s.slice(1);\n    },\n  });\n}\n","import './map';\nimport './includes';\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable no-bitwise */\n\nif (!Array.prototype.map) {\n  Object.defineProperty(Array.prototype, 'map', {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value(arr, iterator) {\n      const result = [];\n\n      for (let i = 0; i < arr.length; i += 1) {\n        result.push(iterator(arr[i]));\n      }\n\n      return result;\n    },\n  });\n}\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable no-bitwise */\n\nif (!Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, 'includes', {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value(valueToFind, fromIndex) {\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      // 1. Let O be ? ToObject(this value).\n      const o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      const len = o.length >>> 0;\n\n      // 3. If len is 0, return false.\n      if (len === 0) {\n        return false;\n      }\n\n      // 4. Let n be ? ToInteger(fromIndex).\n      //    (If fromIndex is undefined, this step produces the value 0.)\n      const n = fromIndex | 0;\n\n      // 5. If n ≥ 0, then\n      //  a. Let k be n.\n      // 6. Else n < 0,\n      //  a. Let k be len + n.\n      //  b. If k < 0, let k be 0.\n      let k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n      function sameValueZero(x, y) {\n        return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\n      }\n\n      // 7. Repeat, while k < len\n      while (k < len) {\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n        // b. If SameValueZero(valueToFind, elementK) is true, return true.\n        if (sameValueZero(o[k], valueToFind)) {\n          return true;\n        }\n        // c. Increase k by 1.\n        k++;\n      }\n\n      // 8. Return false\n      return false;\n    },\n  });\n}\n","import './assign';\nimport './getOwnPropertySymbols';\nimport './getOwnPropertyDescriptors';\nimport './merge';\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable no-bitwise */\n\nif (!Object.assign) {\n  Object.defineProperty(Object, 'assign', {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value(target, firstSource) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert first argument to object');\n      }\n\n      const to = Object(target);\n      for (let i = 1; i < arguments.length; i++) {\n        let nextSource = arguments[i];\n        if (nextSource === undefined || nextSource === null) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        nextSource = Object(nextSource);\n\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n      return to;\n    },\n  });\n}\n","/* eslint-disable */\n\n(function (Object, GOPS) {\n  'use strict';\n\n  // (C) Andrea Giammarchi - Mit Style\n  // @see https://github.com/es-shims/get-own-property-symbols\n\n  if (GOPS in Object) { return; }\n\n  var\n    setDescriptor,\n    G = typeof global === typeof G ? window : global,\n    id = 0,\n    random = String(Math.random()),\n    prefix = '__\\x01symbol:',\n    prefixLength = prefix.length,\n    internalSymbol = '__\\x01symbol@@' + random,\n    DP = 'defineProperty',\n    DPies = 'defineProperties',\n    GOPN = 'getOwnPropertyNames',\n    GOPD = 'getOwnPropertyDescriptor',\n    PIE = 'propertyIsEnumerable',\n    gOPN = Object[GOPN],\n    gOPD = Object[GOPD],\n    create = Object.create,\n    keys = Object.keys,\n    freeze = Object.freeze || Object,\n    defineProperty = Object[DP],\n    $defineProperties = Object[DPies],\n    descriptor = gOPD(Object, GOPN),\n    ObjectProto = Object.prototype,\n    hOP = ObjectProto.hasOwnProperty,\n    pIE = ObjectProto[PIE],\n    toString = ObjectProto.toString,\n    addInternalIfNeeded = function (o, uid, enumerable) {\n      if (!hOP.call(o, internalSymbol)) {\n        defineProperty(o, internalSymbol, {\n          enumerable: false,\n          configurable: false,\n          writable: false,\n          value: {}\n        });\n      }\n      o[internalSymbol]['@@' + uid] = enumerable; // eslint-disable-line no-param-reassign\n    },\n    createWithSymbols = function (proto, descriptors) {\n      var self = create(proto);\n      gOPN(descriptors).forEach(function (key) {\n        if (propertyIsEnumerable.call(descriptors, key)) {\n          $defineProperty(self, key, descriptors[key]);\n        }\n      });\n      return self;\n    },\n    copyAsNonEnumerable = function (descriptor) {\n      var newDescriptor = create(descriptor);\n      newDescriptor.enumerable = false;\n      return newDescriptor;\n    },\n    get = function get() {},\n    onlyNonSymbols = function (name) {\n      // eslint-disable-next-line eqeqeq\n      return name != internalSymbol && !hOP.call(source, name);\n    },\n    onlySymbols = function (name) {\n      // eslint-disable-next-line eqeqeq\n      return name != internalSymbol && hOP.call(source, name);\n    },\n    propertyIsEnumerable = function propertyIsEnumerable(key) {\n      var uid = String(key);\n      return onlySymbols(uid) ? hOP.call(this, uid) && this[internalSymbol]['@@' + uid] : pIE.call(this, key);\n    },\n    setAndGetSymbol = function (uid) {\n      var descriptor = {\n        enumerable: false,\n        configurable: true,\n        get: get,\n        set: function (value) {\n          setDescriptor(this, uid, {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n          addInternalIfNeeded(this, uid, true);\n        }\n      };\n      defineProperty(ObjectProto, uid, descriptor);\n      source[uid] = defineProperty(\n        Object(uid),\n        'constructor',\n        sourceConstructor\n      );\n      return freeze(source[uid]);\n    },\n    Symbol = function Symbol(description) {\n      if (this instanceof Symbol) {\n        throw new TypeError('Symbol is not a constructor');\n      }\n      return setAndGetSymbol(prefix.concat(description || '', random, ++id));\n    },\n    source = create(null),\n    sourceConstructor = { value: Symbol },\n    sourceMap = function (uid) {\n      return source[uid];\n    },\n    $defineProperty = function defineProp(o, key, descriptor) {\n      var uid = String(key);\n      if (onlySymbols(uid)) {\n        setDescriptor(o, uid, descriptor.enumerable ? copyAsNonEnumerable(descriptor) : descriptor);\n        addInternalIfNeeded(o, uid, !!descriptor.enumerable);\n      } else {\n        defineProperty(o, key, descriptor);\n      }\n      return o;\n    },\n    $getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n      return gOPN(o).filter(onlySymbols).map(sourceMap);\n    };\n  descriptor.value = $defineProperty;\n  defineProperty(Object, DP, descriptor);\n\n  descriptor.value = $getOwnPropertySymbols;\n  defineProperty(Object, GOPS, descriptor);\n\n  descriptor.value = function getOwnPropertyNames(o) {\n    return gOPN(o).filter(onlyNonSymbols);\n  };\n  defineProperty(Object, GOPN, descriptor);\n\n  descriptor.value = function defineProperties(o, descriptors) {\n    var symbols = $getOwnPropertySymbols(descriptors);\n    if (symbols.length) {\n      keys(descriptors).concat(symbols).forEach(function (uid) {\n        if (propertyIsEnumerable.call(descriptors, uid)) {\n          $defineProperty(o, uid, descriptors[uid]);\n        }\n      });\n    } else {\n      $defineProperties(o, descriptors);\n    }\n    return o;\n  };\n  defineProperty(Object, DPies, descriptor);\n\n  descriptor.value = propertyIsEnumerable;\n  defineProperty(ObjectProto, PIE, descriptor);\n\n  descriptor.value = Symbol;\n  defineProperty(G, 'Symbol', descriptor);\n\n  // defining `Symbol.for(key)`\n  descriptor.value = function (key) {\n    var uid = prefix.concat(prefix, key, random);\n    return uid in ObjectProto ? source[uid] : setAndGetSymbol(uid);\n  };\n  defineProperty(Symbol, 'for', descriptor);\n\n  // defining `Symbol.keyFor(symbol)`\n  descriptor.value = function (symbol) {\n    if (onlyNonSymbols(symbol)) { throw new TypeError(symbol + ' is not a symbol'); }\n    if (!hOP.call(source, symbol)) {\n      return void 0;\n    }\n    var label = symbol.slice(prefixLength);\n    if (label.slice(0, prefixLength) !== prefix) {\n      return void 0;\n    }\n    label = label.slice(prefixLength);\n    if (label === random) {\n      return void 0;\n    }\n    label = label.slice(0, label.length - random.length);\n    return label.length > 0 ? label : void 0;\n  };\n  defineProperty(Symbol, 'keyFor', descriptor);\n\n  descriptor.value = function getOwnPropertyDescriptor(o, key) {\n    var descriptor = gOPD(o, key);\n    if (descriptor && onlySymbols(key)) {\n      descriptor.enumerable = propertyIsEnumerable.call(o, key);\n    }\n    return descriptor;\n  };\n  defineProperty(Object, GOPD, descriptor);\n\n  descriptor.value = function (proto, descriptors) {\n    return arguments.length === 1 || typeof descriptors === 'undefined' ? create(proto) : createWithSymbols(proto, descriptors);\n  };\n  defineProperty(Object, 'create', descriptor);\n\n  descriptor.value = function () {\n    var str = toString.call(this);\n    return str === '[object String]' && onlySymbols(this) ? '[object Symbol]' : str;\n  };\n  defineProperty(ObjectProto, 'toString', descriptor);\n\n  try { // fails in few pre ES 5.1 engines\n    if (\n      create(defineProperty({}, prefix, {\n        get: function () {\n          return defineProperty(this, prefix, { value: true })[prefix];\n        }\n      }))[prefix] === true\n    ) {\n      setDescriptor = defineProperty;\n    } else {\n      throw 'IE11'; // eslint-disable-line no-throw-literal\n    }\n  } catch (o_O) { // eslint-disable-line camelcase\n    setDescriptor = function (o, key, descriptor) {\n      var protoDescriptor = gOPD(ObjectProto, key);\n      delete ObjectProto[key];\n      defineProperty(o, key, descriptor);\n      defineProperty(ObjectProto, key, protoDescriptor);\n    };\n  }\n\n}(Object, 'getOwnPropertySymbols'));\n\n(function (O, Symbol) {\n  'use strict';\n\n  var\n    dP = O.defineProperty,\n    ObjectProto = O.prototype,\n    toString = ObjectProto.toString,\n    toStringTag = 'toStringTag',\n    descriptor;\n  [\n    'iterator', // A method returning the default iterator for an object. Used by for...of.\n    'match', // A method that matches against a string, also used to determine if an object may be used as a regular expression. Used by String.prototype.match().\n    'replace', // A method that replaces matched substrings of a string. Used by String.prototype.replace().\n    'search', // A method that returns the index within a string that matches the regular expression. Used by String.prototype.search().\n    'split', // A method that splits a string at the indices that match a regular expression. Used by String.prototype.split().\n    'hasInstance', // A method determining if a constructor object recognizes an object as its instance. Used by instanceof.\n    'isConcatSpreadable', // A Boolean value indicating if an object should be flattened to its array elements. Used by Array.prototype.concat().\n    'unscopables', // An Array of string values that are property values. These are excluded from the with environment bindings of the associated objects.\n    'species', // A constructor function that is used to create derived objects.\n    'toPrimitive', // A method converting an object to a primitive value.\n    toStringTag // A string value used for the default description of an object. Used by Object.prototype.toString().\n  ].forEach(function (name) {\n    if (!(name in Symbol)) {\n      dP(Symbol, name, { value: Symbol(name) });\n      if (name === toStringTag) {\n        descriptor = O.getOwnPropertyDescriptor(ObjectProto, 'toString');\n        descriptor.value = function () {\n          var str = toString.call(this);\n          var tst = this == null ? this : this[Symbol.toStringTag];\n          return tst == null ? str : '[object ' + tst + ']';\n        };\n        dP(ObjectProto, 'toString', descriptor);\n      }\n    }\n  });\n}(Object, Symbol));\n\n(function (Si, AP, SP) {\n\n  function returnThis() { return this; }\n\n  /*\n   * make Arrays usable as iterators\n   * so that other iterables can copy same logic\n   */\n  if (!AP[Si]) {\n    // eslint-disable-next-line no-param-reassign\n    AP[Si] = function () {\n      var\n        i = 0,\n        self = this,\n        iterator = {\n          next: function next() {\n            var done = self.length <= i;\n            return done ? { done: done } : { done: done, value: self[i++] };\n          }\n        };\n      iterator[Si] = returnThis;\n      return iterator;\n    };\n  }\n\n  /*\n   * make Strings usable as iterators\n   * to simplify Array.from and for/of like loops\n   */\n  if (!SP[Si]) {\n    // eslint-disable-next-line no-param-reassign\n    SP[Si] = function () {\n      var\n        fromCodePoint = String.fromCodePoint,\n        self = this,\n        i = 0,\n        length = self.length,\n        iterator = {\n          next: function next() {\n            var\n              done = length <= i,\n              c = done ? '' : fromCodePoint(self.codePointAt(i));\n            i += c.length;\n            return done ? { done: done } : { done: done, value: c };\n          }\n        };\n      iterator[Si] = returnThis;\n      return iterator;\n    };\n  }\n\n}(Symbol.iterator, Array.prototype, String.prototype));\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable no-bitwise */\n\nif (!Object.hasOwnProperty('getOwnPropertyDescriptors')) {\n  Object.defineProperty(Object, 'getOwnPropertyDescriptors', {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    value(object) {\n      const keys = !!Reflect && !!Reflect.ownKeys ? Reflect.ownKeys(object) : Object.getOwnPropertyNames(object).concat(Object.getOwnPropertySymbols(object));\n\n      return keys.reduce((descriptors, key) => {\n        return Object.defineProperty(descriptors, key, {\n          configurable: true,\n          enumerable: true,\n          writable: true,\n          value: Object.getOwnPropertyDescriptor(object, key),\n        });\n      }, {});\n    },\n  });\n}\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable no-bitwise */\n\nif (!Object.prototype.merge) {\n  Object.defineProperty(Object.prototype, 'merge', {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value(...objs) {\n      const mergeObj = [this, ...objs].reduce((acc, obj) => Object.keys(obj).reduce((a, k) => {\n        if (acc.hasOwnProperty(k)) {\n          if (acc[k] instanceof Array) {\n            acc[k] = [].concat(acc[k], obj[k]);\n          } else if (acc[k] instanceof Object && Object.keys(acc[k]).length > 0 && obj[k] instanceof Object && Object.keys(obj[k]).length > 0) {\n            acc[k].merge(obj[k]);\n          } else {\n            acc[k] = obj[k];\n          }\n        } else {\n          acc[k] = obj[k];\n        }\n\n        return acc;\n      }, {}), {});\n\n      return Object.assign(this, mergeObj);\n    },\n  });\n}\n","/**\n *\n *\n * @export\n * @class Asserts\n */\nexport class Asserts {\n  static checkAssert(assert, safe = false) {\n    if (!!assert) {\n      if (assert instanceof Function) {\n        if (!!safe) {\n          try {\n            return assert();\n          } catch (e) {\n            return false;\n          }\n        }\n\n        return assert();\n      }\n\n      return assert;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check for every assert to be true\n   *\n   * @static\n   * @param {any} [asserts=[]] - array of asserts (can be boolean, strings, functions, whatever you want ;-)\n   * @param {boolean} [safe=false] - executes asserts in a safe mode (try/catch)\n   * @returns boolean\n   *\n   * @memberOf Asserts\n   */\n  static all(asserts: any[] = [], safe = false) {\n    return asserts.every((assert) => {\n      return Asserts.checkAssert(assert, safe);\n    });\n  }\n\n  /**\n   * Check for at least one assert to be true\n   *\n   * @static\n   * @param {any} [asserts=[]] - array of asserts (can be boolean, strings, functions, whatever you want ;-)\n   * @param {boolean} [safe=false] - executes asserts in a safe mode (try/catch)\n   * @returns boolean\n   *\n   * @memberOf Asserts\n   */\n  static one(asserts: any[] = [], safe = false) {\n    return asserts.some((assert) => {\n      return Asserts.checkAssert(assert, safe);\n    });\n  }\n}\n","/**\n *\n *\n * @export\n * @class FlagsClass\n */\nexport class FlagsClass {\n  #booleanFlagsValuePropertyName: string;\n\n  get booleanFlagsValuePropertyName() {\n    return this.#booleanFlagsValuePropertyName;\n  }\n\n  set booleanFlagsValuePropertyName(booleanFlagsValuePropertyName: string) {\n    this.#booleanFlagsValuePropertyName = booleanFlagsValuePropertyName;\n  }\n\n  #root: Window & typeof globalThis;\n\n  get root() {\n    return this.#root;\n  }\n\n  #process: any; // NodeJS.Process\n\n  get process() {\n    return this.#process;\n  }\n\n  #navigator: Navigator;\n\n  get navigator() {\n    return this.#navigator;\n  }\n\n  #document: Document;\n\n  get document() {\n    return this.#document;\n  }\n\n  #ua: string;\n\n  get ua() {\n    return this.#ua;\n  }\n\n  /**\n   * Creates an instance of FlagsClass.\n   * @param {any} [ua=null]\n   *\n   * @memberOf FlagsClass\n   */\n  constructor(ua: string | null = null) {\n    this.#booleanFlagsValuePropertyName = 'name';\n    this.#root = self || window || global || {};\n\n    this.#process = this.#root.process || {};\n    this.#navigator = this.#root.navigator || {};\n    this.#document = this.#root.document || null;\n    this.#ua = ua || this.#navigator.userAgent || 'n/a';\n  }\n\n  /**\n   *\n   *\n   * @returns {object}\n   *\n   * @memberOf FlagsClass\n   */\n  toValues() {\n    const proto = Object.getPrototypeOf(this);\n    const protoName = (this.#booleanFlagsValuePropertyName || this.constructor.name).toLowerCase();\n\n    const protoProperties = Object.getOwnPropertyNames(proto)\n      .filter((prop) => {\n        return !!Object.getOwnPropertyDescriptors(proto)[prop].get;\n      })\n      .concat(\n        Object.getOwnPropertyNames(this).filter((prop) => {\n          return !prop.startsWith('_') && !Object.getOwnPropertyDescriptor(this, prop)?.get;\n        })\n      );\n\n    const protoPropertiesReduced = protoProperties.reduce((acc, prop) => {\n      if (!!this[prop]) {\n        if (typeof this[prop] === 'boolean') {\n          acc[protoName] = prop;\n        } else {\n          acc[prop] = this[prop];\n        }\n      }\n      return acc;\n    }, {});\n\n    return protoPropertiesReduced;\n  }\n\n  /**\n   *\n   *\n   * @returns {object}\n   *\n   * @memberOf FlagsClass\n   */\n  toFlags() {\n    const proto = Object.getPrototypeOf(this);\n\n    return (\n      Object.getOwnPropertyNames(proto)\n        .filter((prop) => {\n          return !!Object.getOwnPropertyDescriptors(proto)[prop].get;\n        })\n        .reduce((acc, prop) => {\n          acc[prop] = this[prop];\n\n          return acc;\n        }, {})\n        //@ts-ignore\n        .merge(\n          Object.getOwnPropertyNames(this)\n            .filter((prop) => {\n              return !prop.startsWith('_') && !Object.getOwnPropertyDescriptor(this, prop)?.get;\n            })\n            .reduce((acc, prop) => {\n              acc[prop] = this[prop];\n\n              return acc;\n            }, {})\n        )\n    );\n  }\n}\n","import { FlagsClass } from './flagsClass';\n\n/**\n *\n *\n * @export\n * @class CssFlagsClass\n * @extends {FlagsClass}\n */\nexport class CssFlagsClass extends FlagsClass {\n  #flags: any;\n\n  get flags() {\n    return this.#flags;\n  }\n\n  #cssFlagsPrefix: string;\n\n  get cssFlagsPrefix() {\n    return this.#cssFlagsPrefix;\n  }\n\n  /**\n   * Creates an instance of CssFlagsClass.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='flags']\n   *\n   * @memberOf CssFlagsClass\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'flags') {\n    super(ua);\n\n    this.#flags = flags;\n\n    this.#flags[1] = true;\n    this.#cssFlagsPrefix = cssFlagsPrefix;\n  }\n\n  /**\n   *\n   *\n   * @returns object\n   *\n   * @memberOf CssFlagsClass\n   */\n  toCssFlags() {\n    const proto = Object.getPrototypeOf(this);\n\n    return Object.getOwnPropertyNames(proto)\n      .filter((prop) => {\n        return !!Object.getOwnPropertyDescriptors(proto)[prop].get;\n      })\n      .reduce((acc: string[], prop) => {\n        if (!!this[prop]) {\n          acc.push(\n            `${this.#cssFlagsPrefix}--${prop}--${\n              typeof this[prop] !== 'boolean' ? '--' + this[prop] : ''\n            }`.toLowerCase()\n          );\n        }\n\n        return acc;\n      }, []);\n  }\n}\n"],"names":["$parcel$exportWildcard","dest","source","Object","keys","forEach","key","hasOwnProperty","defineProperty","enumerable","get","$parcel$global","globalThis","self","window","global","$parcel$export","e","n","v","s","set","configurable","Reflect","String","prototype","includes","writable","value","search","start","length","indexOf","startsWith","rawPos","pos","substring","toCamelCase","match","map","x","slice","toUpperCase","toLowerCase","join","Array","arr","iterator","result","i","push","valueToFind","fromIndex","TypeError","o","len","k","Math","max","abs","isNaN","assign","target","firstSource","to","arguments","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","undefined","Object1","GOPS","setDescriptor","G","id","random","prefix","prefixLength","internalSymbol","DP","DPies","GOPN","GOPD","PIE","gOPN","gOPD","create","freeze","$defineProperties","descriptor","ObjectProto","hOP","pIE","toString","addInternalIfNeeded","uid","call","createWithSymbols","proto","descriptors","propertyIsEnumerable","$defineProperty","copyAsNonEnumerable","newDescriptor","onlyNonSymbols","name","onlySymbols","setAndGetSymbol","sourceConstructor","Symbol1","description","concat","sourceMap","$getOwnPropertySymbols","filter","symbols","symbol","label","str","o_O","protoDescriptor","O","dP","toStringTag","tst","Symbol","Si","AP","SP","returnThis","next","done","fromCodePoint","c","codePointAt","object","ownKeys","getOwnPropertyNames","getOwnPropertySymbols","reduce","merge","objs","mergeObj","acc","obj","a","$2e0bb4eabf415dc3$exports","$2e0bb4eabf415dc3$export$a01bb7117a391d00","checkAssert","assert","safe","Function","all","asserts","every","one","some","$71fc7a70ac28ce65$exports","$71fc7a70ac28ce65$export$4f3d6547cdbed990","booleanFlagsValuePropertyName","root","process","navigator","document","ua","constructor","userAgent","toValues","getPrototypeOf","protoName","protoProperties","prop","getOwnPropertyDescriptors","protoPropertiesReduced","toFlags","$da8b88b012a74d9f$exports","$da8b88b012a74d9f$export$f4dfb95cdf26c5c7","flags","cssFlagsPrefix","toCssFlags","module","exports"],"version":3,"file":"core.js.map"}