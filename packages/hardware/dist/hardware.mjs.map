{"mappings":"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","sources":["packages/hardware/lib/platform.ts","packages/hardware/lib/device.ts","packages/hardware/lib/cpu.ts","packages/hardware/lib/gpu.ts"],"sourcesContent":["import { Asserts, CssFlagsClass } from '@detector-js/core';\n/**\n *\n *\n * @export\n * @class Platform\n * @extends {CssFlagsClass}\n */\nexport class Platform extends CssFlagsClass {\n  /**\n   * Creates an instance of Platform.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='platform']\n   *\n   * @memberOf Platform\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'platform') {\n    super(ua, flags, cssFlagsPrefix);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberOf Platform\n   */\n  get bot() {\n    return Asserts.one([/googlebot/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberof Platform\n   */\n  get console() {\n    return Asserts.all([\n      /(?:xbox|playstation|nintendo|archos.*gamepad([2]?))/i.test(this.ua),\n      !/(?:xbmc|kodi|nexbox|newfoxbox)/i.test(this.ua)\n    ]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberof Platform\n   */\n  get tv() {\n    return (\n      Asserts.one([\n        /(?:google|smart(?:-)|internet\\.|(?:i)net|apple|(?:pov|aoc)\\_|hbb|web|sonyd|vs|cloud)tv/i.test(this.ua),\n        /(?:viera|bravia|bangolufsen|humax|airties|netcast|owb|grundig|thom(?:son)|arcelik|telefunken|panasonic|hisense|boxee|kylo|dlnadoc|ce-html|tb-pO1|netbox|tv(\\s?:box|build))/i.test(\n          this.ua\n        )\n      ]) &&\n      Asserts.one([!this.mobile, !this.bot, this.flags.feature.fullscreenKeyboard]) &&\n      Asserts.one([this.flags.os.Android, this.flags.os.Tizen, this.flags.os.WebOS])\n    );\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */\n  get tablet() {\n    return Asserts.all([this.mobile, /(ipad|tab(?:let)|kindle|playbook|vega|sm-t|lenovo\\st(?:a)b)/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */\n  get smartphone() {\n    return Asserts.all([this.mobile, !this.tablet]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */\n  get mobile() {\n    return (\n      (Asserts.one([\n        this.flags.feature.deviceMotion,\n        this.flags.feature.deviceOrientation,\n        this.flags.feature.pixelRatio > 1\n      ]) &&\n        Asserts.one([\n          this.flags.feature.touch,\n          this.flags.feature.forceTouch,\n          [\n            'ChromeMobile',\n            'EdgeMobile',\n            'IEMobile',\n            'FirefoxMobile',\n            'MaxthonMobile',\n            'OperaMobile',\n            'SafariMobile'\n          ].includes(this.flags.browser.name)\n        ]) &&\n        Asserts.all([!this.flags.feature.pointerEvents, this.flags.feature.file])) ||\n      Asserts.all([\n        [\n          'Android',\n          'iOS',\n          'WindowsPhone',\n          'Bada',\n          'Blackberry',\n          'Contiki',\n          'MeeGo',\n          'RIM',\n          'QNX',\n          'Palm',\n          'Symbian',\n          'WebOS'\n        ].includes(this.flags.os.name),\n        [\n          'ChromeMobile',\n          'EdgeMobile',\n          'IEMobile',\n          'FirefoxMobile',\n          'MaxthonMobile',\n          'OperaMobile',\n          'SafariMobile'\n        ].includes(this.flags.browser.name)\n      ])\n    );\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberOf Platform\n   */\n  get desktop() {\n    return Asserts.all([!this.bot, !this.console, !this.mobile, !this.tv]);\n  }\n\n  toValues() {\n    const proto = Object.getPrototypeOf(this);\n\n    const protoProperties = Object.getOwnPropertyNames(proto).filter((prop) => {\n      return !!Object.getOwnPropertyDescriptors(proto)[prop].get && !!this[prop];\n    });\n\n    return protoProperties[0] || 'n/a';\n  }\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n\n/**\n *\n *\n * @export\n * @class Device\n * @extends {CssFlagsClass}\n */\nexport class Device extends CssFlagsClass {\n  /**\n   * Creates an instance of Device.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='device']\n   *\n   * @memberOf Device\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'device') {\n    super(ua, flags, cssFlagsPrefix);\n  }\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n\nexport class CPU extends CssFlagsClass {\n  platform: string;\n  cores: number;\n  architecture: string;\n\n  sparc: boolean;\n  irix: boolean;\n  mips: boolean;\n  risc: boolean;\n  avr: boolean;\n  arm: boolean;\n  powerPC: boolean;\n  amd: boolean;\n  intel: boolean;\n\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'cpu') {\n    super(ua, flags, cssFlagsPrefix);\n\n    this.booleanFlagsValuePropertyName = 'vendor';\n\n    this.platform = this.getPlatform();\n    this.cores = this.getCores();\n    this.architecture = this.getArchitecture();\n\n    this.sparc = this.getSparc();\n    this.irix = this.getIrix();\n    this.mips = this.getMips();\n    this.risc = this.getRisc();\n    this.avr = this.getAvr();\n    this.arm = this.getArm();\n    this.powerPC = this.getPowerPC();\n    this.amd = this.getAmd();\n    this.intel = this.getIntel();\n  }\n\n  /**\n   *\n   *\n   * @returns number\n   *\n   * @memberOf CPU\n   */\n  getCores() {\n    return this.navigator.hardwareConcurrency || 1;\n  }\n\n  /**\n   *\n   *\n   * @returns string\n   *\n   * @memberOf CPU\n   */\n  getPlatform() {\n    return this.navigator.platform || 'Win32';\n  }\n\n  /**\n   *\n   *\n   * @returns string\n   *\n   * @memberOf CPU\n   */\n  getArchitecture() {\n    // @ts-ignore\n    let cpuClass = this.navigator.cpuClass || 'x86';\n\n    if (\n      Asserts.one([\n        cpuClass === 'x64',\n        ['Win64', 'MacIntel', 'Linux x86_64', 'Linux i686'].includes(this.navigator.platform),\n        /(?:x86_64|x86-64|win64|wow64|x64;|amd64|arm64|ia64|sparc64|ppc64|mips64|pa-risc64|irix64|ppc64|powerpc64)/i.test(\n          this.ua\n        )\n      ])\n    ) {\n      cpuClass = 'x64';\n    }\n\n    return cpuClass;\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getSparc() {\n    return Asserts.one([/(sun4\\w)[;\\)]/i.test(this.ua), /sparc(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getIrix() {\n    return Asserts.all([/irix(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getMips() {\n    return Asserts.all([/mips(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getRisc() {\n    return Asserts.all([/pa-risc(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getAvr() {\n    return Asserts.all([/(?=atmel\\s)avr/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getArm() {\n    return Asserts.one([/windows\\s(ce|mobile);\\sppc;/i.test(this.ua), /arm(?:64|(?=v\\d+[;l]))/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getPowerPC() {\n    return Asserts.one([/((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i.test(this.ua), this.navigator.platform === 'MacPPC']);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getAmd() {\n    return (\n      Asserts.one([\n        /(?:(amd(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x64',\n        this.navigator.platform === 'Linux x86_64'\n      ]) ||\n      Asserts.one([\n        /(?:(amd(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        /((?:i[346]|x)86)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x86'\n      ])\n    );\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getIntel() {\n    return (\n      Asserts.one([\n        /(?:avr32|ia64(?=;))|68k(?=\\))/i.test(this.ua),\n        /(?:(x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x64',\n        this.navigator.platform === 'MacIntel',\n        this.navigator.platform === 'Linux x86_64'\n      ]) ||\n      Asserts.one([\n        /(?:(x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        /(ia32(?=;))/i.test(this.ua),\n        /((?:i[346]|x)86)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x86'\n      ])\n    );\n  }\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n\n/**\n *\n *\n * @export\n * @class GPU\n * @extends {CssFlagsClass}\n */\nexport class GPU extends CssFlagsClass {\n  webGLVendor: string;\n  webGLRenderer: string;\n  vendor: string;\n  model: string;\n  renderer: string;\n\n  #canvas: HTMLCanvasElement;\n  #info: { webGLVendor: string; webGLRenderer: string; vendor: string; model: string; renderer: string };\n\n  /**\n   * Creates an instance of GPU.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='gpu']\n   *\n   * @memberOf GPU\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'gpu') {\n    super(ua, flags, cssFlagsPrefix);\n\n    this.#createTestElements();\n\n    this.webGLVendor = this.#info.webGLVendor;\n    this.webGLRenderer = this.#info.webGLRenderer;\n    this.vendor = this.#info.vendor;\n    this.model = this.#info.model;\n    this.renderer = this.#info.renderer;\n  }\n\n  /**\n   *\n   *\n   *\n   * @memberOf GPU\n   */\n  #createTestElements() {\n    this.#canvas = this.document.createElement('canvas');\n    this.#info = this.getInfo();\n  }\n\n  // /**\n  //  *\n  //  *\n  //  *\n  //  * @memberOf GPU\n  //  */\n  // _destroyTestElements() {\n  //   this._canvas = null;\n  //   this._info = null;\n\n  //   delete this._canvas;\n  //   delete this._info;\n  // }\n\n  /**\n   *\n   *\n   * @returns object\n   *\n   * @memberOf GPU\n   */\n  getInfo() {\n    const info = {\n      webGLVendor: 'n/a',\n      webGLRenderer: 'n/a',\n      vendor: 'n/a',\n      model: 'n/a',\n      renderer: 'n/a'\n    };\n\n    try {\n      const webGLContext: WebGLRenderingContext | RenderingContext =\n        this.#canvas.getContext('webgl')! ?? this.#canvas.getContext('experimental-webgl')!;\n\n      if (webGLContext) {\n        const dbgRenderInfo = webGLContext.getExtension('WEBGL_debug_renderer_info');\n\n        if (dbgRenderInfo != null) {\n          // @ts-ignore\n          info.merge({\n            vendor: webGLContext.getParameter(dbgRenderInfo.UNMASKED_VENDOR_WEBGL),\n            model: webGLContext.getParameter(dbgRenderInfo.UNMASKED_RENDERER_WEBGL).replace(' OpenGL Engine', ''),\n            renderer: webGLContext.getParameter(dbgRenderInfo.UNMASKED_RENDERER_WEBGL)\n          });\n        }\n\n        // @ts-ignore\n        info.merge({\n          webGLVendor: webGLContext.getParameter(webGLContext.VENDOR),\n          webGLRenderer: webGLContext.getParameter(webGLContext.RENDERER)\n        });\n      }\n    } catch (e) {\n      console.warn('webGL is not supported', e.message);\n    }\n\n    return info;\n  }\n}\n"],"names":["$6cf8acff18a95944$export$2dffd0b5373a4389","$kmhJb$CssFlagsClass","constructor","ua","flags","cssFlagsPrefix","super","bot","$kmhJb$Asserts","one","test","this","console","all","tv","mobile","feature","fullscreenKeyboard","os","Android","Tizen","WebOS","tablet","smartphone","deviceMotion","deviceOrientation","pixelRatio","touch","forceTouch","includes","browser","name","pointerEvents","file","desktop","toValues","proto","Object","getPrototypeOf","getOwnPropertyNames","filter","prop","getOwnPropertyDescriptors","get","$327da97d5338fba4$export$8215d14a63d9fb10","$fa9d866cef6130a0$export$5ebf4cde340e6028","booleanFlagsValuePropertyName","platform","getPlatform","cores","getCores","architecture","getArchitecture","sparc","getSparc","irix","getIrix","mips","getMips","risc","getRisc","avr","getAvr","arm","getArm","powerPC","getPowerPC","amd","getAmd","intel","getIntel","navigator","hardwareConcurrency","cpuClass","$d9da1ea32510ba7c$export$f9febed8cec1c27c","canvas","info","createTestElements","webGLVendor","webGLRenderer","vendor","model","renderer","document","createElement","getInfo","webGLContext","getContext","dbgRenderInfo","getExtension","merge","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","replace","VENDOR","RENDERER","e","warn","message"],"version":3,"file":"hardware.mjs.map"}