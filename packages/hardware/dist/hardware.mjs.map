{"mappings":"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","sources":["packages/hardware/lib/hardware.ts","packages/hardware/lib/platform.ts","packages/hardware/lib/device.ts","packages/hardware/lib/cpu.ts","packages/hardware/lib/gpu.ts"],"sourcesContent":["'use strict';\n\nexport * from './platform';\nexport * from './device';\nexport * from './cpu';\nexport * from './gpu';\n\nif (process.env.NODE_ENV === 'development') {\n  const packageJSON = require('../package.json');\n\n  console.log(`${packageJSON.description} v${packageJSON.version} initialized`);\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n/**\n *\n *\n * @export\n * @class Platform\n * @extends {CssFlagsClass}\n */\nexport class Platform extends CssFlagsClass {\n  /**\n   * Creates an instance of Platform.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='platform']\n   *\n   * @memberOf Platform\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'platform') {\n    super(ua, flags, cssFlagsPrefix);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberOf Platform\n   */\n  get bot() {\n    return Asserts.one([/googlebot/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberof Platform\n   */\n  get console() {\n    return Asserts.all([\n      /(?:xbox|playstation|nintendo|archos.*gamepad([2]?))/i.test(this.ua),\n      !/(?:xbmc|kodi|nexbox|newfoxbox)/i.test(this.ua)\n    ]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberof Platform\n   */\n  get tv() {\n    return (\n      Asserts.one([\n        /(?:google|smart(?:-)|internet\\.|(?:i)net|apple|(?:pov|aoc)\\_|hbb|web|sonyd|vs|cloud)tv/i.test(this.ua),\n        /(?:viera|bravia|bangolufsen|humax|airties|netcast|owb|grundig|thom(?:son)|arcelik|telefunken|panasonic|hisense|boxee|kylo|dlnadoc|ce-html|tb-pO1|netbox|tv(\\s?:box|build))/i.test(\n          this.ua\n        )\n      ]) &&\n      Asserts.one([!this.mobile, !this.bot, this.flags.feature.fullscreenKeyboard]) &&\n      Asserts.one([this.flags.os.Android, this.flags.os.Tizen, this.flags.os.WebOS])\n    );\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */\n  get tablet() {\n    return Asserts.all([this.mobile, /(ipad|tab(?:let)|kindle|playbook|vega|sm-t|lenovo\\st(?:a)b)/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */\n  get smartphone() {\n    return Asserts.all([this.mobile, !this.tablet]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */\n  get mobile() {\n    return (\n      (Asserts.one([\n        this.flags.feature.deviceMotion,\n        this.flags.feature.deviceOrientation,\n        this.flags.feature.pixelRatio > 1\n      ]) &&\n        Asserts.one([\n          this.flags.feature.touch,\n          this.flags.feature.forceTouch,\n          [\n            'ChromeMobile',\n            'EdgeMobile',\n            'IEMobile',\n            'FirefoxMobile',\n            'MaxthonMobile',\n            'OperaMobile',\n            'SafariMobile'\n          ].includes(this.flags.browser.name)\n        ]) &&\n        Asserts.all([!this.flags.feature.pointerEvents, this.flags.feature.file])) ||\n      Asserts.all([\n        [\n          'Android',\n          'iOS',\n          'WindowsPhone',\n          'Bada',\n          'Blackberry',\n          'Contiki',\n          'MeeGo',\n          'RIM',\n          'QNX',\n          'Palm',\n          'Symbian',\n          'WebOS'\n        ].includes(this.flags.os.name),\n        [\n          'ChromeMobile',\n          'EdgeMobile',\n          'IEMobile',\n          'FirefoxMobile',\n          'MaxthonMobile',\n          'OperaMobile',\n          'SafariMobile'\n        ].includes(this.flags.browser.name)\n      ])\n    );\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberOf Platform\n   */\n  get desktop() {\n    return Asserts.all([!this.bot, !this.console, !this.mobile, !this.tv]);\n  }\n\n  toValues() {\n    const proto = Object.getPrototypeOf(this);\n\n    const protoProperties = Object.getOwnPropertyNames(proto).filter((prop) => {\n      return !!Object.getOwnPropertyDescriptors(proto)[prop].get && !!this[prop];\n    });\n\n    return protoProperties[0] || 'n/a';\n  }\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n\n/**\n *\n *\n * @export\n * @class Device\n * @extends {CssFlagsClass}\n */\nexport class Device extends CssFlagsClass {\n  /**\n   * Creates an instance of Device.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='device']\n   *\n   * @memberOf Device\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'device') {\n    super(ua, flags, cssFlagsPrefix);\n  }\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n\nexport class CPU extends CssFlagsClass {\n  platform: string;\n  cores: number;\n  architecture: string;\n\n  sparc: boolean;\n  irix: boolean;\n  mips: boolean;\n  risc: boolean;\n  avr: boolean;\n  arm: boolean;\n  powerPC: boolean;\n  amd: boolean;\n  intel: boolean;\n\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'cpu') {\n    super(ua, flags, cssFlagsPrefix);\n\n    this.booleanFlagsValuePropertyName = 'vendor';\n\n    this.platform = this.getPlatform();\n    this.cores = this.getCores();\n    this.architecture = this.getArchitecture();\n\n    this.sparc = this.getSparc();\n    this.irix = this.getIrix();\n    this.mips = this.getMips();\n    this.risc = this.getRisc();\n    this.avr = this.getAvr();\n    this.arm = this.getArm();\n    this.powerPC = this.getPowerPC();\n    this.amd = this.getAmd();\n    this.intel = this.getIntel();\n  }\n\n  /**\n   *\n   *\n   * @returns number\n   *\n   * @memberOf CPU\n   */\n  getCores() {\n    return this.navigator.hardwareConcurrency || 1;\n  }\n\n  /**\n   *\n   *\n   * @returns string\n   *\n   * @memberOf CPU\n   */\n  getPlatform() {\n    return this.navigator.platform || 'Win32';\n  }\n\n  /**\n   *\n   *\n   * @returns string\n   *\n   * @memberOf CPU\n   */\n  getArchitecture() {\n    // @ts-ignore\n    let cpuClass = this.navigator.cpuClass || 'x86';\n\n    if (\n      Asserts.one([\n        cpuClass === 'x64',\n        ['Win64', 'MacIntel', 'Linux x86_64', 'Linux i686'].includes(this.navigator.platform),\n        /(?:x86_64|x86-64|win64|wow64|x64;|amd64|arm64|ia64|sparc64|ppc64|mips64|pa-risc64|irix64|ppc64|powerpc64)/i.test(\n          this.ua\n        )\n      ])\n    ) {\n      cpuClass = 'x64';\n    }\n\n    return cpuClass;\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getSparc() {\n    return Asserts.one([/(sun4\\w)[;\\)]/i.test(this.ua), /sparc(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getIrix() {\n    return Asserts.all([/irix(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getMips() {\n    return Asserts.all([/mips(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getRisc() {\n    return Asserts.all([/pa-risc(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getAvr() {\n    return Asserts.all([/(?=atmel\\s)avr/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getArm() {\n    return Asserts.one([/windows\\s(ce|mobile);\\sppc;/i.test(this.ua), /arm(?:64|(?=v\\d+[;l]))/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getPowerPC() {\n    return Asserts.one([/((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i.test(this.ua), this.navigator.platform === 'MacPPC']);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getAmd() {\n    return (\n      Asserts.one([\n        /(?:(amd(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x64',\n        this.navigator.platform === 'Linux x86_64'\n      ]) ||\n      Asserts.one([\n        /(?:(amd(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        /((?:i[346]|x)86)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x86'\n      ])\n    );\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getIntel() {\n    return (\n      Asserts.one([\n        /(?:avr32|ia64(?=;))|68k(?=\\))/i.test(this.ua),\n        /(?:(x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x64',\n        this.navigator.platform === 'MacIntel',\n        this.navigator.platform === 'Linux x86_64'\n      ]) ||\n      Asserts.one([\n        /(?:(x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        /(ia32(?=;))/i.test(this.ua),\n        /((?:i[346]|x)86)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x86'\n      ])\n    );\n  }\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n\n/**\n *\n *\n * @export\n * @class GPU\n * @extends {CssFlagsClass}\n */\nexport class GPU extends CssFlagsClass {\n  webGLVendor: string;\n  webGLRenderer: string;\n  vendor: string;\n  model: string;\n  renderer: string;\n\n  #canvas: HTMLCanvasElement;\n  #info: { webGLVendor: string; webGLRenderer: string; vendor: string; model: string; renderer: string };\n\n  /**\n   * Creates an instance of GPU.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='gpu']\n   *\n   * @memberOf GPU\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'gpu') {\n    super(ua, flags, cssFlagsPrefix);\n\n    this.#createTestElements();\n\n    this.webGLVendor = this.#info.webGLVendor;\n    this.webGLRenderer = this.#info.webGLRenderer;\n    this.vendor = this.#info.vendor;\n    this.model = this.#info.model;\n    this.renderer = this.#info.renderer;\n  }\n\n  /**\n   *\n   *\n   *\n   * @memberOf GPU\n   */\n  #createTestElements() {\n    this.#canvas = this.document.createElement('canvas');\n    this.#info = this.getInfo();\n  }\n\n  // /**\n  //  *\n  //  *\n  //  *\n  //  * @memberOf GPU\n  //  */\n  // _destroyTestElements() {\n  //   this._canvas = null;\n  //   this._info = null;\n\n  //   delete this._canvas;\n  //   delete this._info;\n  // }\n\n  /**\n   *\n   *\n   * @returns object\n   *\n   * @memberOf GPU\n   */\n  getInfo() {\n    const info = {\n      webGLVendor: 'n/a',\n      webGLRenderer: 'n/a',\n      vendor: 'n/a',\n      model: 'n/a',\n      renderer: 'n/a'\n    };\n\n    try {\n      const webGLContext: WebGLRenderingContext | RenderingContext =\n        this.#canvas.getContext('webgl')! ?? this.#canvas.getContext('experimental-webgl')!;\n\n      if (webGLContext) {\n        const dbgRenderInfo = webGLContext.getExtension('WEBGL_debug_renderer_info');\n\n        if (dbgRenderInfo != null) {\n          // @ts-ignore\n          info.merge({\n            vendor: webGLContext.getParameter(dbgRenderInfo.UNMASKED_VENDOR_WEBGL),\n            model: webGLContext.getParameter(dbgRenderInfo.UNMASKED_RENDERER_WEBGL).replace(' OpenGL Engine', ''),\n            renderer: webGLContext.getParameter(dbgRenderInfo.UNMASKED_RENDERER_WEBGL)\n          });\n        }\n\n        // @ts-ignore\n        info.merge({\n          webGLVendor: webGLContext.getParameter(webGLContext.VENDOR),\n          webGLRenderer: webGLContext.getParameter(webGLContext.RENDERER)\n        });\n      }\n    } catch (e) {\n      console.warn('webGL is not supported', e.message);\n    }\n\n    return info;\n  }\n}\n"],"names":[],"version":3,"file":"hardware.mjs.map"}