{"mappings":"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","sources":["<anon>","packages/hardware/lib/hardware.ts","packages/hardware/lib/platform.ts","packages/hardware/lib/device.ts","packages/hardware/lib/cpu.ts","packages/hardware/lib/gpu.ts"],"sourcesContent":["import {Asserts as $kmhJb$Asserts, CssFlagsClass as $kmhJb$CssFlagsClass} from \"@detector-js/core\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $6cf8acff18a95944$exports = {};\n\n$parcel$export($6cf8acff18a95944$exports, \"Platform\", () => $6cf8acff18a95944$export$2dffd0b5373a4389);\n\nclass $6cf8acff18a95944$export$2dffd0b5373a4389 extends (0, $kmhJb$CssFlagsClass) {\n    /**\n   * Creates an instance of Platform.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='platform']\n   *\n   * @memberOf Platform\n   */ constructor(ua = null, flags = {}, cssFlagsPrefix = \"platform\"){\n        super(ua, flags, cssFlagsPrefix);\n    }\n    /**\n   *\n   *\n   * @readonly\n   * @memberOf Platform\n   */ get bot() {\n        return (0, $kmhJb$Asserts).one([\n            /googlebot/i.test(this.ua)\n        ]);\n    }\n    /**\n   *\n   *\n   * @readonly\n   * @memberof Platform\n   */ get console() {\n        return (0, $kmhJb$Asserts).all([\n            /(?:xbox|playstation|nintendo|archos.*gamepad([2]?))/i.test(this.ua),\n            !/(?:xbmc|kodi|nexbox|newfoxbox)/i.test(this.ua)\n        ]);\n    }\n    /**\n   *\n   *\n   * @readonly\n   * @memberof Platform\n   */ get tv() {\n        return (0, $kmhJb$Asserts).one([\n            /(?:google|smart(?:-)|internet\\.|(?:i)net|apple|(?:pov|aoc)\\_|hbb|web|sonyd|vs|cloud)tv/i.test(this.ua),\n            /(?:viera|bravia|bangolufsen|humax|airties|netcast|owb|grundig|thom(?:son)|arcelik|telefunken|panasonic|hisense|boxee|kylo|dlnadoc|ce-html|tb-pO1|netbox|tv(\\s?:box|build))/i.test(this.ua)\n        ]) && (0, $kmhJb$Asserts).one([\n            !this.mobile,\n            !this.bot,\n            this.flags.feature.fullscreenKeyboard\n        ]) && (0, $kmhJb$Asserts).one([\n            this.flags.os.Android,\n            this.flags.os.Tizen,\n            this.flags.os.WebOS\n        ]);\n    }\n    /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */ get tablet() {\n        return (0, $kmhJb$Asserts).all([\n            this.mobile,\n            /(ipad|tab(?:let)|kindle|playbook|vega|sm-t|lenovo\\st(?:a)b)/i.test(this.ua)\n        ]);\n    }\n    /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */ get smartphone() {\n        return (0, $kmhJb$Asserts).all([\n            this.mobile,\n            !this.tablet\n        ]);\n    }\n    /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */ get mobile() {\n        return (0, $kmhJb$Asserts).one([\n            this.flags.feature.deviceMotion,\n            this.flags.feature.deviceOrientation,\n            this.flags.feature.pixelRatio > 1\n        ]) && (0, $kmhJb$Asserts).one([\n            this.flags.feature.touch,\n            this.flags.feature.forceTouch,\n            [\n                \"ChromeMobile\",\n                \"EdgeMobile\",\n                \"IEMobile\",\n                \"FirefoxMobile\",\n                \"MaxthonMobile\",\n                \"OperaMobile\",\n                \"SafariMobile\"\n            ].includes(this.flags.browser.name)\n        ]) && (0, $kmhJb$Asserts).all([\n            !this.flags.feature.pointerEvents,\n            this.flags.feature.file\n        ]) || (0, $kmhJb$Asserts).all([\n            [\n                \"Android\",\n                \"iOS\",\n                \"WindowsPhone\",\n                \"Bada\",\n                \"Blackberry\",\n                \"Contiki\",\n                \"MeeGo\",\n                \"RIM\",\n                \"QNX\",\n                \"Palm\",\n                \"Symbian\",\n                \"WebOS\"\n            ].includes(this.flags.os.name),\n            [\n                \"ChromeMobile\",\n                \"EdgeMobile\",\n                \"IEMobile\",\n                \"FirefoxMobile\",\n                \"MaxthonMobile\",\n                \"OperaMobile\",\n                \"SafariMobile\"\n            ].includes(this.flags.browser.name)\n        ]);\n    }\n    /**\n   *\n   *\n   * @readonly\n   * @memberOf Platform\n   */ get desktop() {\n        return (0, $kmhJb$Asserts).all([\n            !this.bot,\n            !this.console,\n            !this.mobile,\n            !this.tv\n        ]);\n    }\n    toValues() {\n        const proto = Object.getPrototypeOf(this);\n        const protoProperties = Object.getOwnPropertyNames(proto).filter((prop)=>{\n            return !!Object.getOwnPropertyDescriptors(proto)[prop].get && !!this[prop];\n        });\n        return protoProperties[0] || \"n/a\";\n    }\n}\n\n\nvar $327da97d5338fba4$exports = {};\n\n$parcel$export($327da97d5338fba4$exports, \"Device\", () => $327da97d5338fba4$export$8215d14a63d9fb10);\n\nclass $327da97d5338fba4$export$8215d14a63d9fb10 extends (0, $kmhJb$CssFlagsClass) {\n    /**\n   * Creates an instance of Device.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='device']\n   *\n   * @memberOf Device\n   */ constructor(ua = null, flags = {}, cssFlagsPrefix = \"device\"){\n        super(ua, flags, cssFlagsPrefix);\n    }\n}\n\n\nvar $fa9d866cef6130a0$exports = {};\n\n$parcel$export($fa9d866cef6130a0$exports, \"CPU\", () => $fa9d866cef6130a0$export$5ebf4cde340e6028);\n\nclass $fa9d866cef6130a0$export$5ebf4cde340e6028 extends (0, $kmhJb$CssFlagsClass) {\n    constructor(ua = null, flags = {}, cssFlagsPrefix = \"cpu\"){\n        super(ua, flags, cssFlagsPrefix);\n        this.booleanFlagsValuePropertyName = \"vendor\";\n        this.platform = this.getPlatform();\n        this.cores = this.getCores();\n        this.architecture = this.getArchitecture();\n        this.sparc = this.getSparc();\n        this.irix = this.getIrix();\n        this.mips = this.getMips();\n        this.risc = this.getRisc();\n        this.avr = this.getAvr();\n        this.arm = this.getArm();\n        this.powerPC = this.getPowerPC();\n        this.amd = this.getAmd();\n        this.intel = this.getIntel();\n    }\n    /**\n   *\n   *\n   * @returns number\n   *\n   * @memberOf CPU\n   */ getCores() {\n        return this.navigator.hardwareConcurrency || 1;\n    }\n    /**\n   *\n   *\n   * @returns string\n   *\n   * @memberOf CPU\n   */ getPlatform() {\n        return this.navigator.platform || \"Win32\";\n    }\n    /**\n   *\n   *\n   * @returns string\n   *\n   * @memberOf CPU\n   */ getArchitecture() {\n        // @ts-ignore\n        let cpuClass = this.navigator.cpuClass || \"x86\";\n        if ((0, $kmhJb$Asserts).one([\n            cpuClass === \"x64\",\n            [\n                \"Win64\",\n                \"MacIntel\",\n                \"Linux x86_64\",\n                \"Linux i686\"\n            ].includes(this.navigator.platform),\n            /(?:x86_64|x86-64|win64|wow64|x64;|amd64|arm64|ia64|sparc64|ppc64|mips64|pa-risc64|irix64|ppc64|powerpc64)/i.test(this.ua)\n        ])) cpuClass = \"x64\";\n        return cpuClass;\n    }\n    /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */ getSparc() {\n        return (0, $kmhJb$Asserts).one([\n            /(sun4\\w)[;\\)]/i.test(this.ua),\n            /sparc(?:64)?(?=;);/i.test(this.ua)\n        ]);\n    }\n    /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */ getIrix() {\n        return (0, $kmhJb$Asserts).all([\n            /irix(?:64)?(?=;);/i.test(this.ua)\n        ]);\n    }\n    /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */ getMips() {\n        return (0, $kmhJb$Asserts).all([\n            /mips(?:64)?(?=;);/i.test(this.ua)\n        ]);\n    }\n    /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */ getRisc() {\n        return (0, $kmhJb$Asserts).all([\n            /pa-risc(?:64)?(?=;);/i.test(this.ua)\n        ]);\n    }\n    /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */ getAvr() {\n        return (0, $kmhJb$Asserts).all([\n            /(?=atmel\\s)avr/i.test(this.ua)\n        ]);\n    }\n    /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */ getArm() {\n        return (0, $kmhJb$Asserts).one([\n            /windows\\s(ce|mobile);\\sppc;/i.test(this.ua),\n            /arm(?:64|(?=v\\d+[;l]))/i.test(this.ua)\n        ]);\n    }\n    /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */ getPowerPC() {\n        return (0, $kmhJb$Asserts).one([\n            /((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i.test(this.ua),\n            this.navigator.platform === \"MacPPC\"\n        ]);\n    }\n    /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */ getAmd() {\n        return (0, $kmhJb$Asserts).one([\n            /(?:(amd(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n            // @ts-ignore\n            this.navigator.cpuClass === \"x64\",\n            this.navigator.platform === \"Linux x86_64\"\n        ]) || (0, $kmhJb$Asserts).one([\n            /(?:(amd(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n            /((?:i[346]|x)86)[;\\)]/i.test(this.ua),\n            // @ts-ignore\n            this.navigator.cpuClass === \"x86\"\n        ]);\n    }\n    /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */ getIntel() {\n        return (0, $kmhJb$Asserts).one([\n            /(?:avr32|ia64(?=;))|68k(?=\\))/i.test(this.ua),\n            /(?:(x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n            // @ts-ignore\n            this.navigator.cpuClass === \"x64\",\n            this.navigator.platform === \"MacIntel\",\n            this.navigator.platform === \"Linux x86_64\"\n        ]) || (0, $kmhJb$Asserts).one([\n            /(?:(x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n            /(ia32(?=;))/i.test(this.ua),\n            /((?:i[346]|x)86)[;\\)]/i.test(this.ua),\n            // @ts-ignore\n            this.navigator.cpuClass === \"x86\"\n        ]);\n    }\n}\n\n\nvar $d9da1ea32510ba7c$exports = {};\n\n$parcel$export($d9da1ea32510ba7c$exports, \"GPU\", () => $d9da1ea32510ba7c$export$f9febed8cec1c27c);\n\nclass $d9da1ea32510ba7c$export$f9febed8cec1c27c extends (0, $kmhJb$CssFlagsClass) {\n    #canvas;\n    #info;\n    /**\n   * Creates an instance of GPU.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='gpu']\n   *\n   * @memberOf GPU\n   */ constructor(ua = null, flags = {}, cssFlagsPrefix = \"gpu\"){\n        super(ua, flags, cssFlagsPrefix);\n        this.#createTestElements();\n        this.webGLVendor = this.#info.webGLVendor;\n        this.webGLRenderer = this.#info.webGLRenderer;\n        this.vendor = this.#info.vendor;\n        this.model = this.#info.model;\n        this.renderer = this.#info.renderer;\n    }\n    /**\n   *\n   *\n   *\n   * @memberOf GPU\n   */ #createTestElements() {\n        this.#canvas = this.document.createElement(\"canvas\");\n        this.#info = this.getInfo();\n    }\n    // /**\n    //  *\n    //  *\n    //  *\n    //  * @memberOf GPU\n    //  */\n    // _destroyTestElements() {\n    //   this._canvas = null;\n    //   this._info = null;\n    //   delete this._canvas;\n    //   delete this._info;\n    // }\n    /**\n   *\n   *\n   * @returns object\n   *\n   * @memberOf GPU\n   */ getInfo() {\n        const info = {\n            webGLVendor: \"n/a\",\n            webGLRenderer: \"n/a\",\n            vendor: \"n/a\",\n            model: \"n/a\",\n            renderer: \"n/a\"\n        };\n        try {\n            const webGLContext = this.#canvas.getContext(\"webgl\") ?? this.#canvas.getContext(\"experimental-webgl\");\n            if (webGLContext) {\n                const dbgRenderInfo = webGLContext.getExtension(\"WEBGL_debug_renderer_info\");\n                if (dbgRenderInfo != null) // @ts-ignore\n                info.merge({\n                    vendor: webGLContext.getParameter(dbgRenderInfo.UNMASKED_VENDOR_WEBGL),\n                    model: webGLContext.getParameter(dbgRenderInfo.UNMASKED_RENDERER_WEBGL).replace(\" OpenGL Engine\", \"\"),\n                    renderer: webGLContext.getParameter(dbgRenderInfo.UNMASKED_RENDERER_WEBGL)\n                });\n                // @ts-ignore\n                info.merge({\n                    webGLVendor: webGLContext.getParameter(webGLContext.VENDOR),\n                    webGLRenderer: webGLContext.getParameter(webGLContext.RENDERER)\n                });\n            }\n        } catch (e) {\n            console.warn(\"webGL is not supported\", e.message);\n        }\n        return info;\n    }\n}\n\n\n\"use strict\";\n\n\nexport {$6cf8acff18a95944$export$2dffd0b5373a4389 as Platform, $327da97d5338fba4$export$8215d14a63d9fb10 as Device, $fa9d866cef6130a0$export$5ebf4cde340e6028 as CPU, $d9da1ea32510ba7c$export$f9febed8cec1c27c as GPU};\n//# sourceMappingURL=hardware.mjs.map\n","'use strict';\n\nexport * from './platform';\nexport * from './device';\nexport * from './cpu';\nexport * from './gpu';\n\nif (process.env.NODE_ENV === 'development') {\n  const packageJSON = require('../package.json');\n\n  console.log(`${packageJSON.description} v${packageJSON.version} initialized`);\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n/**\n *\n *\n * @export\n * @class Platform\n * @extends {CssFlagsClass}\n */\nexport class Platform extends CssFlagsClass {\n  /**\n   * Creates an instance of Platform.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='platform']\n   *\n   * @memberOf Platform\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'platform') {\n    super(ua, flags, cssFlagsPrefix);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberOf Platform\n   */\n  get bot() {\n    return Asserts.one([/googlebot/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberof Platform\n   */\n  get console() {\n    return Asserts.all([\n      /(?:xbox|playstation|nintendo|archos.*gamepad([2]?))/i.test(this.ua),\n      !/(?:xbmc|kodi|nexbox|newfoxbox)/i.test(this.ua)\n    ]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberof Platform\n   */\n  get tv() {\n    return (\n      Asserts.one([\n        /(?:google|smart(?:-)|internet\\.|(?:i)net|apple|(?:pov|aoc)\\_|hbb|web|sonyd|vs|cloud)tv/i.test(this.ua),\n        /(?:viera|bravia|bangolufsen|humax|airties|netcast|owb|grundig|thom(?:son)|arcelik|telefunken|panasonic|hisense|boxee|kylo|dlnadoc|ce-html|tb-pO1|netbox|tv(\\s?:box|build))/i.test(\n          this.ua\n        )\n      ]) &&\n      Asserts.one([!this.mobile, !this.bot, this.flags.feature.fullscreenKeyboard]) &&\n      Asserts.one([this.flags.os.Android, this.flags.os.Tizen, this.flags.os.WebOS])\n    );\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */\n  get tablet() {\n    return Asserts.all([this.mobile, /(ipad|tab(?:let)|kindle|playbook|vega|sm-t|lenovo\\st(?:a)b)/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */\n  get smartphone() {\n    return Asserts.all([this.mobile, !this.tablet]);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Platform\n   */\n  get mobile() {\n    return (\n      (Asserts.one([\n        this.flags.feature.deviceMotion,\n        this.flags.feature.deviceOrientation,\n        this.flags.feature.pixelRatio > 1\n      ]) &&\n        Asserts.one([\n          this.flags.feature.touch,\n          this.flags.feature.forceTouch,\n          [\n            'ChromeMobile',\n            'EdgeMobile',\n            'IEMobile',\n            'FirefoxMobile',\n            'MaxthonMobile',\n            'OperaMobile',\n            'SafariMobile'\n          ].includes(this.flags.browser.name)\n        ]) &&\n        Asserts.all([!this.flags.feature.pointerEvents, this.flags.feature.file])) ||\n      Asserts.all([\n        [\n          'Android',\n          'iOS',\n          'WindowsPhone',\n          'Bada',\n          'Blackberry',\n          'Contiki',\n          'MeeGo',\n          'RIM',\n          'QNX',\n          'Palm',\n          'Symbian',\n          'WebOS'\n        ].includes(this.flags.os.name),\n        [\n          'ChromeMobile',\n          'EdgeMobile',\n          'IEMobile',\n          'FirefoxMobile',\n          'MaxthonMobile',\n          'OperaMobile',\n          'SafariMobile'\n        ].includes(this.flags.browser.name)\n      ])\n    );\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @memberOf Platform\n   */\n  get desktop() {\n    return Asserts.all([!this.bot, !this.console, !this.mobile, !this.tv]);\n  }\n\n  toValues() {\n    const proto = Object.getPrototypeOf(this);\n\n    const protoProperties = Object.getOwnPropertyNames(proto).filter((prop) => {\n      return !!Object.getOwnPropertyDescriptors(proto)[prop].get && !!this[prop];\n    });\n\n    return protoProperties[0] || 'n/a';\n  }\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n\n/**\n *\n *\n * @export\n * @class Device\n * @extends {CssFlagsClass}\n */\nexport class Device extends CssFlagsClass {\n  /**\n   * Creates an instance of Device.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='device']\n   *\n   * @memberOf Device\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'device') {\n    super(ua, flags, cssFlagsPrefix);\n  }\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n\nexport class CPU extends CssFlagsClass {\n  platform: string;\n  cores: number;\n  architecture: string;\n\n  sparc: boolean;\n  irix: boolean;\n  mips: boolean;\n  risc: boolean;\n  avr: boolean;\n  arm: boolean;\n  powerPC: boolean;\n  amd: boolean;\n  intel: boolean;\n\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'cpu') {\n    super(ua, flags, cssFlagsPrefix);\n\n    this.booleanFlagsValuePropertyName = 'vendor';\n\n    this.platform = this.getPlatform();\n    this.cores = this.getCores();\n    this.architecture = this.getArchitecture();\n\n    this.sparc = this.getSparc();\n    this.irix = this.getIrix();\n    this.mips = this.getMips();\n    this.risc = this.getRisc();\n    this.avr = this.getAvr();\n    this.arm = this.getArm();\n    this.powerPC = this.getPowerPC();\n    this.amd = this.getAmd();\n    this.intel = this.getIntel();\n  }\n\n  /**\n   *\n   *\n   * @returns number\n   *\n   * @memberOf CPU\n   */\n  getCores() {\n    return this.navigator.hardwareConcurrency || 1;\n  }\n\n  /**\n   *\n   *\n   * @returns string\n   *\n   * @memberOf CPU\n   */\n  getPlatform() {\n    return this.navigator.platform || 'Win32';\n  }\n\n  /**\n   *\n   *\n   * @returns string\n   *\n   * @memberOf CPU\n   */\n  getArchitecture() {\n    // @ts-ignore\n    let cpuClass = this.navigator.cpuClass || 'x86';\n\n    if (\n      Asserts.one([\n        cpuClass === 'x64',\n        ['Win64', 'MacIntel', 'Linux x86_64', 'Linux i686'].includes(this.navigator.platform),\n        /(?:x86_64|x86-64|win64|wow64|x64;|amd64|arm64|ia64|sparc64|ppc64|mips64|pa-risc64|irix64|ppc64|powerpc64)/i.test(\n          this.ua\n        )\n      ])\n    ) {\n      cpuClass = 'x64';\n    }\n\n    return cpuClass;\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getSparc() {\n    return Asserts.one([/(sun4\\w)[;\\)]/i.test(this.ua), /sparc(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getIrix() {\n    return Asserts.all([/irix(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getMips() {\n    return Asserts.all([/mips(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getRisc() {\n    return Asserts.all([/pa-risc(?:64)?(?=;);/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getAvr() {\n    return Asserts.all([/(?=atmel\\s)avr/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getArm() {\n    return Asserts.one([/windows\\s(ce|mobile);\\sppc;/i.test(this.ua), /arm(?:64|(?=v\\d+[;l]))/i.test(this.ua)]);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getPowerPC() {\n    return Asserts.one([/((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i.test(this.ua), this.navigator.platform === 'MacPPC']);\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getAmd() {\n    return (\n      Asserts.one([\n        /(?:(amd(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x64',\n        this.navigator.platform === 'Linux x86_64'\n      ]) ||\n      Asserts.one([\n        /(?:(amd(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        /((?:i[346]|x)86)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x86'\n      ])\n    );\n  }\n\n  /**\n   *\n   *\n   * @returns boolean\n   *\n   * @memberOf CPU\n   */\n  getIntel() {\n    return (\n      Asserts.one([\n        /(?:avr32|ia64(?=;))|68k(?=\\))/i.test(this.ua),\n        /(?:(x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x64',\n        this.navigator.platform === 'MacIntel',\n        this.navigator.platform === 'Linux x86_64'\n      ]) ||\n      Asserts.one([\n        /(?:(x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i.test(this.ua),\n        /(ia32(?=;))/i.test(this.ua),\n        /((?:i[346]|x)86)[;\\)]/i.test(this.ua),\n        // @ts-ignore\n        this.navigator.cpuClass === 'x86'\n      ])\n    );\n  }\n}\n","import { Asserts, CssFlagsClass } from '@detector-js/core';\n\n/**\n *\n *\n * @export\n * @class GPU\n * @extends {CssFlagsClass}\n */\nexport class GPU extends CssFlagsClass {\n  webGLVendor: string;\n  webGLRenderer: string;\n  vendor: string;\n  model: string;\n  renderer: string;\n\n  #canvas: HTMLCanvasElement;\n  #info: { webGLVendor: string; webGLRenderer: string; vendor: string; model: string; renderer: string };\n\n  /**\n   * Creates an instance of GPU.\n   * @param {any} [ua=null]\n   * @param {any} [flags={}]\n   * @param {string} [cssFlagsPrefix='gpu']\n   *\n   * @memberOf GPU\n   */\n  constructor(ua: string | null = null, flags = {}, cssFlagsPrefix = 'gpu') {\n    super(ua, flags, cssFlagsPrefix);\n\n    this.#createTestElements();\n\n    this.webGLVendor = this.#info.webGLVendor;\n    this.webGLRenderer = this.#info.webGLRenderer;\n    this.vendor = this.#info.vendor;\n    this.model = this.#info.model;\n    this.renderer = this.#info.renderer;\n  }\n\n  /**\n   *\n   *\n   *\n   * @memberOf GPU\n   */\n  #createTestElements() {\n    this.#canvas = this.document.createElement('canvas');\n    this.#info = this.getInfo();\n  }\n\n  // /**\n  //  *\n  //  *\n  //  *\n  //  * @memberOf GPU\n  //  */\n  // _destroyTestElements() {\n  //   this._canvas = null;\n  //   this._info = null;\n\n  //   delete this._canvas;\n  //   delete this._info;\n  // }\n\n  /**\n   *\n   *\n   * @returns object\n   *\n   * @memberOf GPU\n   */\n  getInfo() {\n    const info = {\n      webGLVendor: 'n/a',\n      webGLRenderer: 'n/a',\n      vendor: 'n/a',\n      model: 'n/a',\n      renderer: 'n/a'\n    };\n\n    try {\n      const webGLContext: WebGLRenderingContext | RenderingContext =\n        this.#canvas.getContext('webgl')! ?? this.#canvas.getContext('experimental-webgl')!;\n\n      if (webGLContext) {\n        const dbgRenderInfo = webGLContext.getExtension('WEBGL_debug_renderer_info');\n\n        if (dbgRenderInfo != null) {\n          // @ts-ignore\n          info.merge({\n            vendor: webGLContext.getParameter(dbgRenderInfo.UNMASKED_VENDOR_WEBGL),\n            model: webGLContext.getParameter(dbgRenderInfo.UNMASKED_RENDERER_WEBGL).replace(' OpenGL Engine', ''),\n            renderer: webGLContext.getParameter(dbgRenderInfo.UNMASKED_RENDERER_WEBGL)\n          });\n        }\n\n        // @ts-ignore\n        info.merge({\n          webGLVendor: webGLContext.getParameter(webGLContext.VENDOR),\n          webGLRenderer: webGLContext.getParameter(webGLContext.RENDERER)\n        });\n      }\n    } catch (e) {\n      console.warn('webGL is not supported', e.message);\n    }\n\n    return info;\n  }\n}\n"],"names":["Asserts","$kmhJb$Asserts","CssFlagsClass","$kmhJb$CssFlagsClass","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$6cf8acff18a95944$export$2dffd0b5373a4389","constructor","ua","flags","cssFlagsPrefix","bot","one","test","console","all","tv","mobile","feature","fullscreenKeyboard","os","Android","Tizen","WebOS","tablet","smartphone","deviceMotion","deviceOrientation","pixelRatio","touch","forceTouch","includes","browser","name","pointerEvents","file","desktop","toValues","proto","getPrototypeOf","protoProperties","getOwnPropertyNames","filter","prop","getOwnPropertyDescriptors","$327da97d5338fba4$export$8215d14a63d9fb10","$fa9d866cef6130a0$export$5ebf4cde340e6028","booleanFlagsValuePropertyName","platform","getPlatform","cores","getCores","architecture","getArchitecture","sparc","getSparc","irix","getIrix","mips","getMips","risc","getRisc","avr","getAvr","arm","getArm","powerPC","getPowerPC","amd","getAmd","intel","getIntel","navigator","hardwareConcurrency","cpuClass","$d9da1ea32510ba7c$export$f9febed8cec1c27c","canvas","info","createTestElements","webGLVendor","webGLRenderer","vendor","model","renderer","document","createElement","getInfo","webGLContext","getContext","dbgRenderInfo","getExtension","merge","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","replace","VENDOR","RENDERER","warn","message","Platform","Device","CPU","GPU"],"version":3,"file":"hardware.mjs.map"}